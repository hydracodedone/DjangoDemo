# Generated by Django 2.2.10 on 2021-08-12 00:40

import AppleApp.util.util
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppleInstance',
            fields=[
                ('uid', models.UUIDField(auto_created=True, db_index=True, default=AppleApp.util.util.uuid_general, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='最后一次更新时间')),
                ('delete_time', models.DateTimeField(blank=True, null=True, verbose_name='删除时间')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('batch_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='苹果批次名称')),
                ('sum_remaining', models.FloatField(verbose_name='该批次苹果现存总量')),
                ('price', models.FloatField(verbose_name='预期售出价格')),
                ('product_time', models.DateField(verbose_name='苹果生产日期')),
                ('is_available', models.BooleanField(default=True, verbose_name='是否愿意出售')),
                ('is_empty', models.BooleanField(default=True, verbose_name='是否售空')),
                ('note', models.CharField(blank=True, max_length=300, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name_plural': '苹果批次信息方式',
                'db_table': 'Apple_Instance',
            },
        ),
        migrations.CreateModel(
            name='AppleInstanceThroughStorage',
            fields=[
                ('uid', models.UUIDField(auto_created=True, db_index=True, default=AppleApp.util.util.uuid_general, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='最后一次更新时间')),
                ('delete_time', models.DateTimeField(blank=True, null=True, verbose_name='删除时间')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('remaining', models.FloatField(verbose_name='现余存量')),
                ('incoming_time', models.DateField(verbose_name='入库时间')),
                ('note', models.CharField(blank=True, max_length=300, null=True)),
                ('is_available', models.BooleanField(default=True, verbose_name='是否愿意出售')),
                ('is_empty', models.BooleanField(default=True, verbose_name='是否售空')),
                ('apple_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AppleApp.AppleInstance', verbose_name='苹果批次信息')),
            ],
            options={
                'verbose_name_plural': '苹果库存信息',
                'db_table': 'Apple_Instance_Through_Storage',
            },
        ),
        migrations.CreateModel(
            name='AppleLevel',
            fields=[
                ('uid', models.UUIDField(auto_created=True, db_index=True, default=AppleApp.util.util.uuid_general, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='最后一次更新时间')),
                ('delete_time', models.DateTimeField(blank=True, null=True, verbose_name='删除时间')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('level_name', models.CharField(max_length=20, unique=True, verbose_name='苹果等级')),
            ],
            options={
                'verbose_name_plural': '苹果等级',
                'db_table': 'Apple_Level',
            },
        ),
        migrations.CreateModel(
            name='AppleMaturity',
            fields=[
                ('uid', models.UUIDField(auto_created=True, db_index=True, default=AppleApp.util.util.uuid_general, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='最后一次更新时间')),
                ('delete_time', models.DateTimeField(blank=True, null=True, verbose_name='删除时间')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('maturity_name', models.CharField(max_length=20, unique=True, verbose_name='苹果成熟度')),
            ],
            options={
                'verbose_name_plural': '苹果成熟度',
                'db_table': 'Apple_Maturity',
            },
        ),
        migrations.CreateModel(
            name='ApplePackingType',
            fields=[
                ('uid', models.UUIDField(auto_created=True, db_index=True, default=AppleApp.util.util.uuid_general, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='最后一次更新时间')),
                ('delete_time', models.DateTimeField(blank=True, null=True, verbose_name='删除时间')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('packing_type_name', models.CharField(max_length=20, unique=True, verbose_name='包装方式')),
            ],
            options={
                'verbose_name_plural': '苹果包装方式',
                'db_table': 'Apple_Packing_Type',
            },
        ),
        migrations.CreateModel(
            name='ApplePesticideResidue',
            fields=[
                ('uid', models.UUIDField(auto_created=True, db_index=True, default=AppleApp.util.util.uuid_general, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='最后一次更新时间')),
                ('delete_time', models.DateTimeField(blank=True, null=True, verbose_name='删除时间')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('pesticide_residue_name', models.CharField(max_length=20, unique=True, verbose_name='农药残留量')),
            ],
            options={
                'verbose_name_plural': '苹果农药残留量',
                'db_table': 'Apple_Pesticide_Residue',
            },
        ),
        migrations.CreateModel(
            name='AppleType',
            fields=[
                ('uid', models.UUIDField(auto_created=True, db_index=True, default=AppleApp.util.util.uuid_general, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='最后一次更新时间')),
                ('delete_time', models.DateTimeField(blank=True, null=True, verbose_name='删除时间')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('type_name', models.CharField(max_length=20, unique=True, verbose_name='苹果种类')),
            ],
            options={
                'verbose_name_plural': '苹果种类',
                'db_table': 'Apple_Type',
            },
        ),
        migrations.CreateModel(
            name='LoginUser',
            fields=[
                ('uid', models.UUIDField(auto_created=True, db_index=True, default=AppleApp.util.util.uuid_general, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='最后一次更新时间')),
                ('delete_time', models.DateTimeField(blank=True, null=True, verbose_name='删除时间')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('name', models.CharField(db_index=True, max_length=10, verbose_name='姓名')),
                ('phone_number', models.CharField(max_length=15, verbose_name='联系电话')),
                ('login_name', models.CharField(max_length=20, unique=True, verbose_name='登陆用户名')),
                ('login_password', models.CharField(max_length=200, verbose_name='密码')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='地址')),
                ('is_validate', models.BooleanField(default=False, verbose_name='人工是否审核')),
            ],
            options={
                'verbose_name_plural': '注册用户',
                'db_table': 'Login_User',
                'unique_together': {('is_deleted', 'login_name')},
            },
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('uid', models.UUIDField(auto_created=True, db_index=True, default=AppleApp.util.util.uuid_general, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='最后一次更新时间')),
                ('delete_time', models.DateTimeField(blank=True, null=True, verbose_name='删除时间')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
            ],
            options={
                'verbose_name_plural': '商家',
                'db_table': 'Owner',
            },
        ),
        migrations.CreateModel(
            name='OwnerType',
            fields=[
                ('uid', models.UUIDField(auto_created=True, db_index=True, default=AppleApp.util.util.uuid_general, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='最后一次更新时间')),
                ('delete_time', models.DateTimeField(blank=True, null=True, verbose_name='删除时间')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('owner_name', models.CharField(max_length=20, unique=True, verbose_name='商家类型')),
            ],
            options={
                'verbose_name_plural': '商家类型',
                'db_table': 'Owner_Type',
            },
        ),
        migrations.CreateModel(
            name='StoragePoolQuantityChangeLogType',
            fields=[
                ('uid', models.UUIDField(auto_created=True, db_index=True, default=AppleApp.util.util.uuid_general, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='最后一次更新时间')),
                ('delete_time', models.DateTimeField(blank=True, null=True, verbose_name='删除时间')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('change_type', models.CharField(max_length=10, unique=True, verbose_name='账目类型')),
            ],
            options={
                'verbose_name_plural': '账目类型',
                'db_table': 'Storage_Pool_Quantity_ChangeLog_Type',
            },
        ),
        migrations.CreateModel(
            name='StoragePoolType',
            fields=[
                ('uid', models.UUIDField(auto_created=True, db_index=True, default=AppleApp.util.util.uuid_general, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='最后一次更新时间')),
                ('delete_time', models.DateTimeField(blank=True, null=True, verbose_name='删除时间')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('pool_type', models.CharField(max_length=20, unique=True, verbose_name='仓库类型')),
            ],
            options={
                'verbose_name_plural': '仓库类型',
                'db_table': 'Storage_Pool_Type',
            },
        ),
        migrations.CreateModel(
            name='StoragePoolQuantityChangeLog',
            fields=[
                ('uid', models.UUIDField(auto_created=True, db_index=True, default=AppleApp.util.util.uuid_general, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='最后一次更新时间')),
                ('delete_time', models.DateTimeField(blank=True, null=True, verbose_name='删除时间')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('change_number', models.FloatField(verbose_name='变更数量')),
                ('remaining', models.FloatField(verbose_name='本次变更后剩余数量')),
                ('is_empty', models.BooleanField(default=True, verbose_name='是否售空')),
                ('note', models.CharField(blank=True, max_length=300, null=True, verbose_name='备注')),
                ('record_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AppleApp.StoragePoolQuantityChangeLogType', verbose_name='账目类型')),
                ('storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AppleApp.AppleInstanceThroughStorage', verbose_name='对应仓库')),
            ],
            options={
                'verbose_name_plural': '账目流水',
                'db_table': 'Storage_Pool_Quantity_ChangeLog',
            },
        ),
        migrations.CreateModel(
            name='StoragePool',
            fields=[
                ('uid', models.UUIDField(auto_created=True, db_index=True, default=AppleApp.util.util.uuid_general, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='最后一次更新时间')),
                ('delete_time', models.DateTimeField(blank=True, null=True, verbose_name='删除时间')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('longtitude', models.FloatField(blank=True, null=True, verbose_name='经度')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='纬度')),
                ('location', models.CharField(max_length=200, verbose_name='仓库详细地址')),
                ('phone_number', models.CharField(max_length=11, verbose_name='仓库联系电话')),
                ('capacity', models.FloatField(blank=True, null=True, verbose_name='仓库总容量')),
                ('is_internal_managed', models.BooleanField(default=True, verbose_name='是否为内部维护信息')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=True, to='AppleApp.Owner', verbose_name='仓库法人')),
                ('pool_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AppleApp.StoragePoolType', verbose_name='仓库类型')),
            ],
            options={
                'verbose_name_plural': '仓库',
                'db_table': 'Storage_Pool',
                'unique_together': {('owner', 'location', 'phone_number')},
            },
        ),
        migrations.AddField(
            model_name='owner',
            name='owner_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AppleApp.OwnerType', verbose_name='商家类型'),
        ),
        migrations.AddField(
            model_name='owner',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='AppleApp.LoginUser', verbose_name='对应的注册用户'),
        ),
        migrations.AddField(
            model_name='appleinstancethroughstorage',
            name='storage_pool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AppleApp.StoragePool', verbose_name='苹果保存仓库'),
        ),
        migrations.AddField(
            model_name='appleinstance',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='apple', to='AppleApp.AppleLevel', verbose_name='苹果等级'),
        ),
        migrations.AddField(
            model_name='appleinstance',
            name='maturity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='apple', to='AppleApp.AppleMaturity', verbose_name='苹果成熟度'),
        ),
        migrations.AddField(
            model_name='appleinstance',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AppleApp.Owner', verbose_name='苹果所有者'),
        ),
        migrations.AddField(
            model_name='appleinstance',
            name='packing_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='apple', to='AppleApp.ApplePackingType', verbose_name='苹果包装方式'),
        ),
        migrations.AddField(
            model_name='appleinstance',
            name='pesticide_residue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='apple', to='AppleApp.ApplePesticideResidue', verbose_name='农药残留量'),
        ),
        migrations.AddField(
            model_name='appleinstance',
            name='storage',
            field=models.ManyToManyField(through='AppleApp.AppleInstanceThroughStorage', to='AppleApp.StoragePool', verbose_name='苹果存储地点'),
        ),
        migrations.AddField(
            model_name='appleinstance',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='apple', to='AppleApp.AppleType', verbose_name='苹果类型'),
        ),
    ]
